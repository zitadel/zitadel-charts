name: 'Test Charts'

on: 'pull_request'

jobs:
  test:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        kindest-image-tag:
        - 'v1.18.20'
        - 'v1.19.16'
        - 'v1.20.15'
        - 'v1.21.14'
        - 'v1.22.17'
        - 'v1.23.17'
        - 'v1.24.13'
        - 'v1.25.9'
        - 'v1.26.4'
        - 'v1.27.2'
        helm-version:
        - v3.12.0
        include:
        - kindest-image-tag: 'v1.27.2'
          helm-version: v3.9.0
    outputs:
      namespaces: ${{ steps.zitadel-test-namespaces.outputs.namespaces }}

    runs-on: 'ubuntu-20.04'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - id: 'checkout'
      uses: 'actions/checkout@v3'
      with:
        fetch-depth: 0

    - id: 'set-up-helm'
      uses: 'azure/setup-helm@v3.3'
      with:
        version: '${{ matrix.helm-version }}'

    - id: 'set-up-python'
      uses: 'actions/setup-python@v2'
      with:
        python-version: 3.7

    - id: 'set-up-chart-testing'
      uses: 'helm/chart-testing-action@v2.3.1'
      with:
        version: 'v3.7.1'

    - id: 'list-changed'
      run: |
        changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
        if [[ -n "$changed" ]]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - id: 'add-cockroachdb-repo'
      run: 'helm repo add cockroachdb https://charts.cockroachdb.com/'
      if: steps.list-changed.outputs.changed == 'true'

    - id: 'lint'
      run: 'ct lint --target-branch ${{ github.event.repository.default_branch }}'
      if: steps.list-changed.outputs.changed == 'true'

    - name: 'create-kind'
      uses: 'helm/kind-action@v1.4.0'
      if: steps.list-changed.outputs.changed == 'true'
      with:
        node_image: 'kindest/node:${{ matrix.kindest-image-tag }}'
        version: 'v0.16.0'

    - name: 'test'
      run: 'go test -tags integration ./...'
      if: steps.list-changed.outputs.changed == 'true'

    - name: 'zitadel-test-namespaces'
      run: echo "namespaces=[$(kubectl get namespaces --output name | grep zitadel-helm | cut -d / -f 2 | tr '\n' ',' | rev | cut -c2- | rev)]" >> "$GITHUB_OUTPUT"
      if: always()

  report:
    needs: test
    runs-on: 'ubuntu-20.04'
    strategy:
      matrix:
        namespace: ${{ fromJSON(steps.random-color-generator.outputs.SELECTED_COLOR)}}
    steps:
    - name: 'report-namespaces'
      uses: jupyterhub/action-k8s-namespace-report@v1
      if: always()
      with:
        namespace: ${{ fromJSON(needs.test.outputs.namespaces) }}
