{{- if .Values.login.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zitadel.login.fullname" . }}
  labels:
    {{- include "zitadel.login.labels" . | nindent 4 }}
  {{- with .Values.login.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.login.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.login.revisionHistoryLimit }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "zitadel.login.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.login.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap_login.yaml") . | sha256sum }}
      labels:
        {{- include "zitadel.login.labels" . | nindent 8 }}
        {{- with .Values.podAdditionalLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "login.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.login.podSecurityContext | nindent 8 }}
      enableServiceLinks: false
      containers:
      {{- if .Values.login.extraContainers }}
        {{- toYaml .Values.login.extraContainers | nindent 8 }}
      {{- end }}
        - name: {{ .Chart.Name }}-reverse-proxy
          image: nginx:1.27-alpine
          command: ["nginx", "-g", "daemon off;"]
          ports:
            - containerPort: {{ include "login.nginxPort" . }}
              name: {{ .Values.login.service.protocol }}-server
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ include "login.nginxPort" . }}
              {{- if .Values.login.serverSslCrtSecret }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ include "login.nginxPort" . }}
              {{- if .Values.login.serverSslCrtSecret }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            {{- if .Values.login.serverSslCrtSecret }}
            - name: tls-certs
              mountPath: /etc/nginx/certs
              readOnly: true
            {{- end }}
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
              readOnly: true
        - name: {{ .Chart.Name }}-login
          securityContext:
            {{- toYaml .Values.login.securityContext | nindent 14 }}
          image: "{{ .Values.login.image.repository }}:{{ .Values.login.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.login.image.pullPolicy }}
          env:
            - name: NEXT_PUBLIC_BASE_PATH
              value: /ui/v2/login
            {{- with .Values.login.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: {{ include "login.nextjsPort" . }}
              name: http
              protocol: TCP
          {{- if .Values.login.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /ui/v2/login/healthy
              port: {{ include "login.nextjsPort" . }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.login.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.login.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.login.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.login.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /ui/v2/login/security
              port: {{ include "login.nextjsPort" . }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.login.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /ui/v2/login/security
              port: {{ include "login.nextjsPort" . }}
              scheme: HTTP
            periodSeconds: {{ .Values.login.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.login.startupProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: login-config-dotenv
              mountPath: /.env-file/
              readOnly: true
            {{- with .Values.login.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.login.resources | nindent 14 }}
      {{- with .Values.login.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        {{- if .Values.login.serverSslCrtSecret }}
        - name: tls-certs
          secret:
            secretName: {{ .Values.login.serverSslCrtSecret }}
        {{- end }}
        - name: nginx-conf
          configMap:
            name: {{ include "zitadel.login.fullname" . }}-nginx
        - name: login-config-dotenv
          configMap:
            name: {{ include "login.configmapName" . }}
        {{- with .Values.login.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.login.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.login.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.login.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.login.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
