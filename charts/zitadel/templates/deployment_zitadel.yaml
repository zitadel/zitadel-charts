apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zitadel.fullname" . }}
  labels:
    {{- include "zitadel.start.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "zitadel.start.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap_zitadel.yaml") . | sha256sum }}
        checksum/nginx-configmap: {{ include (print $.Template.BasePath "/configmap_nginx_zitadel.yaml") . | sha256sum }}
        checksum/secret-db-ssl-ca-crt: {{ include (print $.Template.BasePath "/secret_db-ssl-ca-crt.yaml") . | sha256sum }}
        checksum/secret-zitadel-secrets: {{ include (print $.Template.BasePath "/secret_zitadel-secrets.yaml") . | sha256sum }}
        {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/debug/metrics"
        prometheus.io/port: {{ include "zitadel.containerPort" . | quote }}
        {{- end }}
      labels:
        {{- include "zitadel.start.labels" . | nindent 8 }}
        {{- with .Values.podAdditionalLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zitadel.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      enableServiceLinks: false
      containers:
      {{- if .Values.zitadel.extraContainers }}
        {{- toYaml .Values.zitadel.extraContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.extraContainers }}
        {{- toYaml .Values.extraContainers | nindent 8 }}
      {{- end }}
        - name: {{ .Chart.Name }}-reverse-proxy
          image: nginx:1.27-alpine
          command: ["nginx", "-g", "daemon off;"]
          ports:
            - containerPort: {{ include "zitadel.nginxPort" . }}
              name: {{ .Values.service.protocol }}-server
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ include "zitadel.nginxPort" . }}
              {{- if .Values.zitadel.serverSslCrtSecret }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ include "zitadel.nginxPort" . }}
              {{- if .Values.zitadel.serverSslCrtSecret }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            {{- if .Values.zitadel.serverSslCrtSecret }}
            - name: tls-certs
              mountPath: /etc/nginx/certs
              readOnly: true
            {{- end }}
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
              readOnly: true
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 14 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - start
            {{- if .Values.zitadel.serverSslCrtSecret }}
            - --tlsMode
            - external
            {{- else }}
            - --tlsMode
            - disabled
            {{- end }}
            - --config
            - /config/zitadel-config-yaml
            {{- if .Values.zitadel.secretConfig }}
            - --config
            - /zitadel-secrets-yaml/zitadel-secrets-yaml
            {{- end }}
            {{- if and .Values.zitadel.configSecretName .Values.zitadel.configSecretKey }}
            - --config
            - /zitadel-secret-config-yaml/{{ .Values.zitadel.configSecretKey }}
            {{- end }}
            - --masterkeyFromEnv
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: ZITADEL_MASTERKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "zitadel.masterkeySecretName" . }}
                  key: masterkey
            {{- $dbEnv := get (include "zitadel.dbkey.json" . | fromJson) "env" }}
            {{- if (or .Values.zitadel.dbSslCaCrt .Values.zitadel.dbSslCaCrtSecret) }}
            - name: ZITADEL_DATABASE_{{ $dbEnv }}_USER_SSL_ROOTCERT
              value: /db-ssl-ca-crt/ca.crt
            {{- end }}
            {{- if .Values.zitadel.dbSslUserCrtSecret }}
            - name: ZITADEL_DATABASE_{{ $dbEnv }}_USER_SSL_CERT
              value: /db-ssl-user-crt/tls.crt
            - name: ZITADEL_DATABASE_{{ $dbEnv }}_USER_SSL_KEY
              value: /db-ssl-user-crt/tls.key
            {{- end }}
            {{- with .Values.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.envVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.envVarsSecret }}
          {{- end }}
          ports:
            - containerPort: {{ include "zitadel.containerPort" . }}
              name: http
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /debug/healthz
              port:  {{ include "zitadel.containerPort" . }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /debug/ready
              port:  {{ include "zitadel.containerPort" . }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /debug/ready
              port:  {{ include "zitadel.containerPort" . }}
              scheme: HTTP
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: zitadel-config-yaml
              mountPath: /config
              readOnly: true
          {{- if .Values.zitadel.secretConfig }}
            - name: zitadel-secrets-yaml
              mountPath: /zitadel-secrets-yaml
              readOnly: true
          {{- end }}
          {{- if .Values.zitadel.configSecretName }}
            - name: zitadel-secret-config-yaml
              mountPath: /zitadel-secret-config-yaml
              readOnly: true
          {{- end }}
          {{- if (or .Values.zitadel.dbSslCaCrt .Values.zitadel.dbSslCaCrtSecret) }}
            - name: db-ssl-ca-crt
              mountPath: /db-ssl-ca-crt
              readOnly: true
          {{- end }}
          {{- if .Values.zitadel.dbSslUserCrtSecret }}
            - name: db-ssl-user-crt
              mountPath: /db-ssl-user-crt
              readOnly: true
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 14 }}
      {{- if or .Values.zitadel.selfSignedCert.enabled .Values.zitadel.initContainers}}
      initContainers:
      {{- with .Values.zitadel.initContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        {{- if .Values.zitadel.serverSslCrtSecret }}
        - name: tls-certs
          secret:
            secretName: {{ .Values.zitadel.serverSslCrtSecret }}
        {{- end }}
        - name: nginx-conf
          configMap:
            name: {{ include "zitadel.fullname" . }}-nginx
        - name: zitadel-config-yaml
          configMap:
            name: {{ include "zitadel.configmapName" . }}
        {{- if .Values.zitadel.secretConfig }}
        - name: zitadel-secrets-yaml
          secret:
            secretName: {{ include "zitadel.secretName" . }}
            defaultMode: 0440
        {{- end }}
        {{- if .Values.zitadel.configSecretName }}
        - name: zitadel-secret-config-yaml
          secret:
            secretName: {{ .Values.zitadel.configSecretName }}
            defaultMode: 0440
        {{- end }}
        {{- if .Values.zitadel.dbSslCaCrt }}
        - name: db-ssl-ca-crt
          secret:
            secretName: {{ include "zitadel.dbSslCaCrtSecretName" . }}
            defaultMode: 0440
        {{- end }}
        {{- if .Values.zitadel.dbSslCaCrtSecret }}
        - name: db-ssl-ca-crt
          secret:
            secretName: {{ .Values.zitadel.dbSslCaCrtSecret }}
            defaultMode: 0440
        {{- end }}
        {{- if .Values.zitadel.dbSslUserCrtSecret }}
        - name: db-ssl-user-crt
          secret:
            secretName: {{ .Values.zitadel.dbSslUserCrtSecret }}
            defaultMode: 0440
        {{- end }}
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
