{{- if .Values.ingress.enabled -}}
{{- $fullName := include "zitadel.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "zitadel.labels" . | nindent 4 }}
  annotations:
    {{- if eq .Values.ingress.controller "aws" }}
    alb.ingress.kubernetes.io/group.order: '-1' # to not conflict with zitadel-login
    alb.ingress.kubernetes.io/conditions.{{ $fullName }}-grpc: >
      [{"field":"http-header","httpHeaderConfig":{"httpHeaderName":"Content-Type","values":["application/grpc"]}}]
    {{- end }}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- $values := .Values -}}
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | default $values.zitadel.configmapConfig.ExternalDomain | quote }}
      http:
        paths:
          {{- range .paths }}
          {{- if eq $.Values.ingress.controller "aws" }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $fullName }}-grpc
                port:
                  number: {{ $svcPort }}
          {{- end }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
          {{- end }}
    {{- end }}
{{- end }}
